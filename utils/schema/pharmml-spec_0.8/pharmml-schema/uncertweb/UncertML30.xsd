<?xml version="1.0" encoding="utf-8" ?>
<!--Created with Liquid XML Studio 2012 Developer Edition 10.1.2.4113 (http://www.liquid-technologies.com)-->
<xs:schema xmlns:un="http://www.uncertml.org/3.0" attributeFormDefault="unqualified"
    elementFormDefault="qualified" targetNamespace="http://www.uncertml.org/3.0"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <!--==== Basic Types ====-->
    <xs:simpleType name="kurtosis">
        <xs:restriction base="xs:double">
            <xs:minInclusive value="-2"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="normalisedDouble">
        <xs:restriction base="xs:double">
            <xs:minInclusive value="-1.0"/>
            <xs:maxInclusive value="1.0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="posReal">
        <xs:restriction base="xs:double">
            <xs:minExclusive value="0.0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="natNum">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="posNatNum">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="kurtosisValue">
        <xs:choice maxOccurs="1">
            <xs:element name="kVal" type="un:kurtosis"/>
            <xs:element ref="un:var"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="positiveNaturalNumber">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:element name="pnVal" type="un:posNatNum"/>
            <xs:element ref="un:var"/>
        </xs:choice>
    </xs:complexType>
    <xs:simpleType name="prob">
        <xs:restriction base="xs:double">
            <xs:minInclusive value="0.0"/>
            <xs:maxInclusive value="1.0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="probability">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:element name="pVal" type="un:prob"/>
            <xs:element ref="un:var"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="positiveRealNumber">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:element name="prVal" type="un:posReal"/>
            <xs:element ref="un:var"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="double">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:element name="rVal" type="xs:double"/>
            <xs:element ref="un:var"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="integer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:element name="iVal" type="xs:integer"/>
            <xs:element ref="un:var"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="string">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:element name="sVal" type="xs:string"/>
            <xs:element ref="un:var"/>
        </xs:choice>
    </xs:complexType>
    <xs:attributeGroup name="HREFAttributeGroup">
        <xs:attribute name="href" type="xs:anyURI" use="optional"/>
        <xs:attribute name="mimeType" type="xs:string" use="optional"/>
    </xs:attributeGroup>
    <xs:simpleType name="symbolType">
        <xs:restriction base="xs:Name"/>
    </xs:simpleType>
    <xs:complexType name="varRefType">
        <!--xs:attribute name="symbol" use="required"/-->
        <xs:attribute name="varId" type="un:symbolType" use="required"/>
    </xs:complexType>
    <xs:element name="var" type="un:varRefType"/>
    <xs:complexType name="arrayVarRefType">
        <xs:attribute name="varId" type="un:symbolType" use="required"/>
    </xs:complexType>
    <xs:element name="arrayVar" type="un:arrayVarRefType"/>
    <xs:complexType name="KurtosisValueType">
        <xs:complexContent>
            <xs:extension base="un:kurtosisValue">
                <xs:attributeGroup ref="un:HREFAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="NormalisedValueType">
        <xs:simpleContent>
            <xs:extension base="un:normalisedDouble">
                <xs:attributeGroup ref="un:HREFAttributeGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="ContinuousValueType">
        <xs:complexContent>
            <xs:extension base="un:double">
                <xs:attributeGroup ref="un:HREFAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="DiscreteValueType">
        <xs:complexContent>
            <xs:extension base="un:integer">
                <xs:attributeGroup ref="un:HREFAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="CategoricalValueType">
        <xs:complexContent>
            <xs:extension base="un:string">
                <xs:attributeGroup ref="un:HREFAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ProbabilityValueType">
        <xs:complexContent>
            <xs:extension base="un:probability">
                <xs:attributeGroup ref="un:HREFAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="PositiveRealValueType">
        <xs:complexContent>
            <xs:extension base="un:positiveRealNumber">
                <xs:attributeGroup ref="un:HREFAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="PositiveNaturalNumberValueType">
        <xs:complexContent>
            <xs:extension base="un:positiveNaturalNumber">
                <xs:attributeGroup ref="un:HREFAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="CategoricalProbabilityValueType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <!-- TODO work out what the extension should be -->
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:element name="probability" type="un:ProbabilityValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="NaturalNumberValueType">
        <xs:choice>
            <xs:element ref="un:var"/>
            <xs:element ref="un:nVal"/>
        </xs:choice>
        <xs:attributeGroup ref="un:HREFAttributeGroup"/>
    </xs:complexType>
    <xs:element name="nVal" type="un:natNum"/>
    <xs:complexType name="NaturalNumberArrayValueType">
        <xs:choice>
            <xs:element ref="un:arrayVar"/>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="un:var"/>
                <xs:element ref="un:nVal"/>
            </xs:choice>
        </xs:choice>
        <xs:attributeGroup ref="un:HREFAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="CategoricalProbabilityArrayValueType">
        <xs:choice>
            <xs:sequence minOccurs="1" maxOccurs="unbounded">
                <xs:element name="val" type="un:CategoricalProbabilityValueType"/>
            </xs:sequence>
            <xs:element ref="un:arrayVar"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="PositiveRealArrayValueType">
        <xs:choice>
            <xs:sequence minOccurs="1" maxOccurs="unbounded">
                <!--<xs:element name="val" type="un:PositiveRealValueType" />-->
                <xs:choice>
                    <xs:element name="rVal" type="un:posReal"/>
                    <xs:element ref="un:var"/>
                </xs:choice>
            </xs:sequence>
            <xs:element ref="un:arrayVar"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="RealArrayValueType">
        <xs:choice>
            <xs:sequence minOccurs="1" maxOccurs="unbounded">
                <xs:element name="val" type="un:ContinuousValueType"/>
                <xs:choice>
                    <xs:element name="rVal" type="un:ContinuousValueType" />
                    <xs:element ref="un:var" />
                </xs:choice>
            </xs:sequence>
            <xs:element ref="un:arrayVar"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="CategoricalArrayValueType">
        <xs:choice>
            <xs:sequence minOccurs="1" maxOccurs="unbounded">
                <xs:choice>
                    <xs:element name="sVal" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element ref="un:var"/>
                </xs:choice>
                <!-- TODO  
                These are arrays of simple (though sometimes restricted) types.
                Should the string array and natural number array also be able to reference variables? 
                If so, should it be one for the whole array, or one for each element?... 
                ANSWER: here, we let any element reference a variable - when the array is used as an element, we'll allow a var instead-->
            </xs:sequence>
            <xs:element ref="un:arrayVar"/>
        </xs:choice>
    </xs:complexType>
    <!--==== Inheritance Types ====-->
    <xs:element name="AbstractUncertainty" type="un:AbstractUncertaintyType" abstract="true"/>
    <xs:complexType name="AbstractUncertaintyType" abstract="true">
        <xs:attribute name="definition" type="xs:string" use="required"/>
        <!-- This will be a URI -->
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractMetric" type="un:AbstractMetricType" abstract="true"/>
    <xs:complexType name="AbstractMetricType" abstract="true">
        <xs:attribute name="definition" type="xs:string" use="required"/>
        <!-- This will be a URI -->
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractDistribution" type="un:AbstractDistributionType"
        substitutionGroup="un:AbstractUncertainty" abstract="true"/>
    <xs:complexType name="AbstractDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractUncertaintyType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractContinuousDistribution" type="un:AbstractContinuousDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractContinuousDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractContinuousUnivariateDistribution"
        type="un:AbstractContinuousUnivariateDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractContinuousUnivariateDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractContinuousMultivariateDistribution"
        type="un:AbstractContinuousMultivariateDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractContinuousMultivariateDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractCategoricalDistribution" type="un:AbstractCategoricalDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractCategoricalDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractCategoricalUnivariateDistribution"
        type="un:AbstractCategoricalUnivariateDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractCategoricalUnivariateDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractCategoricalMultivariateDistribution"
        type="un:AbstractCategoricalMultivariateDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractCategoricalMultivariateDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractDiscreteDistribution" type="un:AbstractDiscreteDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractDiscreteDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractDiscreteUnivariateDistribution"
        type="un:AbstractDiscreteUnivariateDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractDiscreteUnivariateDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractDiscreteMultivariateDistribution"
        type="un:AbstractDiscreteMultivariateDistributionType"
        substitutionGroup="un:AbstractDistribution" abstract="true"/>
    <xs:complexType name="AbstractDiscreteMultivariateDistributionType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractDistributionType"/>
        </xs:complexContent>
    </xs:complexType>
    <!--...............................................................................-->
    <xs:element name="AbstractSummaryStatistic" type="un:AbstractSummaryStatisticType"
        substitutionGroup="un:AbstractUncertainty" abstract="true"/>
    <xs:complexType name="AbstractSummaryStatisticType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractUncertaintyType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="AbstractSample" type="un:AbstractSampleType"
        substitutionGroup="un:AbstractUncertainty" abstract="true"/>
    <xs:complexType name="AbstractSampleType" abstract="true">
        <xs:complexContent>
            <xs:extension base="un:AbstractUncertaintyType">
                <xs:sequence>
                    <xs:element name="samplingMethodDescription" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--==== UncertML Core Summary Statistics ====-->
    <xs:element name="Mean" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:MeanType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="MeanType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Mode" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ModeType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ModeType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:choice>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                    <xs:element name="category" type="un:CategoricalValueType"/>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Median" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:MedianType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="MedianType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:choice>
                        <xs:element name="value" type="un:ContinuousValueType"/>
                        <xs:element name="category" type="un:CategoricalValueType"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Quantile" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:QuantileType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="QuantileType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
                <xs:attribute name="level" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:double">
                            <xs:minInclusive value="0.0"/>
                            <xs:maxInclusive value="1.0"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="DiscreteProbability" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:DiscreteProbabilityType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="DiscreteProbabilityType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="categoryProb" type="un:CategoricalProbabilityValueType"
                        minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Probability" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ProbabilityType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ProbabilityType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="probability" type="un:ProbabilityValueType"/>
                </xs:sequence>
                <xs:attribute name="gt" type="xs:double"/>
                <xs:attribute name="lt" type="xs:double"/>
                <xs:attribute name="ge" type="xs:double"/>
                <xs:attribute name="le" type="xs:double"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Variance" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:VarianceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="VarianceType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:PositiveRealValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="StandardDeviation" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:StandardDeviationType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="StandardDeviationType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Skewness" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:SkewnessType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="SkewnessType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ConfidenceInterval" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ConfidenceIntervalType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ConfidenceIntervalType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="lower" type="un:QuantileType"/>
                    <xs:element name="upper" type="un:QuantileType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="StatisticsCollection" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:StatisticsCollectionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="StatisticsCollectionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence maxOccurs="unbounded">
                    <xs:element ref="un:AbstractSummaryStatistic"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ConfusionMatrix" substitutionGroup="un:AbstractMetric">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ConfusionMatrixType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ConfusionMatrixType">
        <xs:complexContent>
            <xs:extension base="un:AbstractMetricType">
                <!-- TODO - decide whether metrics too will have a subset of 'continuous', 'discrete' and 'categorical' -->
                <xs:sequence>
                    <xs:element name="sourceCategories" type="un:CategoricalArrayValueType"/>
                    <xs:element name="targetCategories" type="un:CategoricalArrayValueType"/>
                    <xs:element name="counts" type="un:NaturalNumberArrayValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CovarianceMatrix" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CovarianceMatrixType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CovarianceMatrixType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:RealArrayValueType"/>
                </xs:sequence>
                <xs:attribute name="dimension" type="un:natNum" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--==== UncertML + Summary Statistics ====-->
    <xs:element name="Range" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:RangeType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="RangeType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="lower" type="un:ContinuousValueType"/>
                    <xs:element name="upper" type="un:ContinuousValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CentredMoment" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CentredMomentType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CentredMomentType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
                <xs:attribute name="order" type="un:natNum" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Moment" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:MomentType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="MomentType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
                <xs:attribute name="order" type="un:natNum" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Quartile" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:QuartileType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="QuartileType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
                <xs:attribute name="level" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:double">
                            <xs:pattern value="0.25"/>
                            <xs:pattern value="0.50"/>
                            <xs:pattern value="0.75"/>
                            <xs:pattern value="1.00"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Decile" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:DecileType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="DecileType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
                <xs:attribute name="level" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:integer">
                            <xs:minInclusive value="1"/>
                            <xs:maxInclusive value="9"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Percentile" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:PercentileType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="PercentileType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
                <xs:attribute name="level" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:double">
                            <xs:minInclusive value="0.0"/>
                            <xs:maxInclusive value="100.0"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Kurtosis" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:KurtosisType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="KurtosisType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:KurtosisValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CredibleInterval" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CredibleIntervalType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CredibleIntervalType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="lower" type="un:QuantileType"/>
                    <xs:element name="upper" type="un:QuantileType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Correlation" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CorrelationType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CorrelationType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:NormalisedValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CoefficientOfVariation" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CoefficientOfVariationType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CoefficientOfVariationType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="value" type="un:ContinuousValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="InterquartileRange" substitutionGroup="un:AbstractSummaryStatistic">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:InterquartileRangeType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="InterquartileRangeType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSummaryStatisticType">
                <xs:sequence>
                    <xs:element name="lower" type="un:ContinuousValueType"/>
                    <xs:element name="upper" type="un:ContinuousValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--==== Distributions ====-->
    <xs:element name="DirichletDistribution"
        substitutionGroup="un:AbstractContinuousMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:DirichletDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="DirichletDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="concentration" type="un:PositiveRealValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ExponentialDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ExponentialDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ExponentialDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="rate" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="GammaDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:GammaDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="GammaDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="shape" type="un:PositiveRealValueType"/>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="InverseGammaDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:InverseGammaDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="InverseGammaDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="shape" type="un:PositiveRealValueType"/>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="NormalInverseGammaDistribution"
        substitutionGroup="un:AbstractContinuousMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:NormalInverseGammaDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="NormalInverseGammaDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="mean" type="un:ContinuousValueType"/>
                    <xs:element name="varianceScaling" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBoundN" type="un:ContinuousValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBoundN" type="un:ContinuousValueType"
                        minOccurs="0"/>
                    <xs:element name="shape" type="un:PositiveRealValueType"/>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBoundIG"
                        type="un:PositiveRealValueType" minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBoundIG"
                        type="un:PositiveRealValueType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="PoissonDistribution"
        substitutionGroup="un:AbstractDiscreteUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:PoissonDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="PoissonDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="rate" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="NormalDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:NormalDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="NormalDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="mean" type="un:ContinuousValueType"/>
                    <xs:choice>
                        <xs:element name="variance" type="un:PositiveRealValueType"/>
                        <xs:element name="stddev" type="un:PositiveRealValueType"/>
                    </xs:choice>
                    <xs:element name="truncationLowerInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="DiracDeltaDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:DiracDeltaDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="DiracDeltaDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="location" type="un:ContinuousValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="BinomialDistribution"
        substitutionGroup="un:AbstractDiscreteUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:BinomialDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="BinomialDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="numberOfTrials" type="un:NaturalNumberValueType"/>
                    <xs:element name="probabilityOfSuccess" type="un:ProbabilityValueType"/>
                    <xs:element name="truncationLowerInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="MultinomialDistribution"
        substitutionGroup="un:AbstractDiscreteMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:MultinomialDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="MultinomialDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="numberOfTrials" type="un:NaturalNumberValueType"/>
                    <xs:element name="probabilities" type="un:ProbabilityValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="LogNormalDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:LogNormalDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="LogNormalDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="logScale" type="un:ContinuousValueType"/>
                    <xs:element name="shape" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="StudentTDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:StudentTDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="StudentTDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="location" type="un:ContinuousValueType"/>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="degreesOfFreedom" type="un:PositiveNaturalNumberValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="UniformDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:UniformDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="UniformDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:choice>
                    <xs:sequence>
                        <xs:element name="minimum" type="un:ContinuousValueType"/>
                        <xs:element name="maximum" type="un:ContinuousValueType"/>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element name="numberOfClasses" type="un:PositiveNaturalNumberValueType"
                        />
                    </xs:sequence>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="DiscreteMultivariateMixtureModel"
        substitutionGroup="un:AbstractDiscreteMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:DiscreteMultivariateMixtureModelType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="DiscreteMultivariateMixtureModelType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="component" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="un:AbstractDiscreteMultivariateDistribution"/>
                            </xs:sequence>
                            <xs:attribute name="weight" type="un:prob" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="DiscreteUnivariateMixtureModel"
        substitutionGroup="un:AbstractDiscreteUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:DiscreteUnivariateMixtureModelType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="DiscreteUnivariateMixtureModelType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="component" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="un:AbstractDiscreteUnivariateDistribution"/>
                                <xs:element name="truncationLowerInclusiveBound"
                                    type="un:NaturalNumberValueType" minOccurs="0"/>
                                <xs:element name="truncationUpperInclusiveBound"
                                    type="un:NaturalNumberValueType" minOccurs="0"/>
                            </xs:sequence>
                            <xs:attribute name="weight" type="un:prob" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CategoricalUnivariateMixtureModel"
        substitutionGroup="un:AbstractCategoricalUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CategoricalUnivariateMixtureModelType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CategoricalUnivariateMixtureModelType">
        <xs:complexContent>
            <xs:extension base="un:AbstractCategoricalUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="component" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="un:AbstractCategoricalUnivariateDistribution"/>
                            </xs:sequence>
                            <xs:attribute name="weight" type="un:prob" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CategoricalMultivariateMixtureModel"
        substitutionGroup="un:AbstractCategoricalMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CategoricalMultivariateMixtureModelType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CategoricalMultivariateMixtureModelType">
        <xs:complexContent>
            <xs:extension base="un:AbstractCategoricalMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="component" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="un:AbstractCategoricalMultivariateDistribution"/>
                            </xs:sequence>
                            <xs:attribute name="weight" type="un:prob" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ContinuousMultivariateMixtureModel"
        substitutionGroup="un:AbstractContinuousMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ContinuousMultivariateMixtureModelType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ContinuousMultivariateMixtureModelType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="component" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="un:AbstractContinuousMultivariateDistribution"/>
                            </xs:sequence>
                            <xs:attribute name="weight" type="un:prob" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ContinuousUnivariateMixtureModel"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ContinuousUnivariateMixtureModelType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ContinuousUnivariateMixtureModelType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="component" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="un:AbstractContinuousUnivariateDistribution"/>
                                <xs:element name="truncationLowerInclusiveBound"
                                    type="un:ContinuousValueType" minOccurs="0"/>
                                <xs:element name="truncationUpperInclusiveBound"
                                    type="un:ContinuousValueType" minOccurs="0"/>
                            </xs:sequence>
                            <xs:attribute name="weight" type="un:prob" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--...................................................................-->
    <xs:element name="MultivariateNormalDistribution"
        substitutionGroup="un:AbstractContinuousMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:MultivariateNormalDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="MultivariateNormalDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="meanVector" type="un:RealArrayValueType"/>
                    <!-- TODO check correct, check if it should be 'means' - allow choice of external reference again -->
                    <xs:element name="covarianceMatrix" type="un:CovarianceMatrixType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="MultivariateStudentTDistribution"
        substitutionGroup="un:AbstractContinuousMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:MultivariateStudentTDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="MultivariateStudentTDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="meanVector" type="un:RealArrayValueType"/>
                    <xs:element name="covarianceMatrix" type="un:CovarianceMatrixType"/>
                    <xs:element name="degreesOfFreedom" type="un:PositiveNaturalNumberValueType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
  <xs:element name="ConditionalDistribution" type="un:ConditionalDistributionType" substitutionGroup="un:AbstractDistribution"/>
	<xs:complexType name="ConditionalDistributionType">
		<xs:complexContent>
			<xs:extension base="un:AbstractDistributionType">
				<xs:sequence minOccurs="0">
					<xs:element name="hyperDistribution" maxOccurs="unbounded">
						<xs:complexType>
							<xs:sequence>
								<xs:element ref="un:AbstractDistribution"/>
							</xs:sequence>
							<xs:attribute ref="xlink:href"/>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
-->
    <!--==== UncertML+ Distributions ====-->
    <xs:element name="BetaDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:BetaDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="BetaDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="alpha" type="un:PositiveRealValueType"/>
                    <xs:element name="beta" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:ProbabilityValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:ProbabilityValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="LaplaceDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:LaplaceDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="LaplaceDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="location" type="un:ContinuousValueType"/>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CauchyDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CauchyDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CauchyDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="location" type="un:ContinuousValueType"/>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="WeibullDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:WeibullDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="WeibullDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="shape" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:PositiveRealValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="LogisticDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:LogisticDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="LogisticDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="location" type="un:ContinuousValueType"/>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ChiSquareDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ChiSquareDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ChiSquareDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="degreesOfFreedom" type="un:PositiveNaturalNumberValueType"/>
                    <xs:element name="truncationLowerInclusiveBoundIG"
                        type="un:PositiveRealValueType" minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBoundIG"
                        type="un:PositiveRealValueType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="GeometricDistribution"
        substitutionGroup="un:AbstractDiscreteUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:GeometricDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="GeometricDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="probability" type="un:ProbabilityValueType"/>
                    <xs:element name="truncationLowerInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="HypergeometricDistribution"
        substitutionGroup="un:AbstractDiscreteUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:HypergeometricDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="HypergeometricDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="numberOfSuccesses" type="un:NaturalNumberValueType"/>
                    <xs:element name="numberOfTrials" type="un:NaturalNumberValueType"/>
                    <xs:element name="populationSize" type="un:NaturalNumberValueType"/>
                    <xs:element name="truncationLowerInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="FDistribution" substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:FDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="FDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="denominator" type="un:NaturalNumberValueType"/>
                    <xs:element name="numerator" type="un:NaturalNumberValueType"/>
                    <xs:element name="truncationLowerInclusiveBoundIG"
                        type="un:PositiveRealValueType" minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBoundIG"
                        type="un:PositiveRealValueType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="NegativeBinomialDistribution"
        substitutionGroup="un:AbstractDiscreteUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:NegativeBinomialDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="NegativeBinomialDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="numberOfFailures" type="un:NaturalNumberValueType"/>
                    <xs:element name="probability" type="un:ProbabilityValueType"/>
                    <xs:element name="truncationLowerInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound"
                        type="un:NaturalNumberValueType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ParetoDistribution"
        substitutionGroup="un:AbstractContinuousUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:ParetoDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ParetoDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractContinuousUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="scale" type="un:PositiveRealValueType"/>
                    <xs:element name="shape" type="un:PositiveRealValueType"/>
                    <xs:element name="truncationLowerInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                    <xs:element name="truncationUpperInclusiveBound" type="un:ContinuousValueType"
                        minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="WishartDistribution"
        substitutionGroup="un:AbstractDiscreteMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:WishartDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="WishartDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractDiscreteMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="degreesOfFreedom" type="un:positiveRealNumber"/>
                    <xs:element name="scaleMatrix" type="un:CovarianceMatrixType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="BernoulliDistribution"
        substitutionGroup="un:AbstractCategoricalUnivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:BernoulliDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="BernoulliDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractCategoricalUnivariateDistributionType">
                <xs:sequence>
                    <xs:element name="categoryProb" type="un:CategoricalProbabilityValueType"
                        minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CategoricalDistribution"
        substitutionGroup="un:AbstractCategoricalMultivariateDistribution">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:CategoricalDistributionType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CategoricalDistributionType">
        <xs:complexContent>
            <xs:extension base="un:AbstractCategoricalMultivariateDistributionType">
                <xs:sequence>
                    <xs:element name="categoryProb" type="un:CategoricalProbabilityValueType"
                        minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--==== Samples ====-->
    <xs:element name="RandomSample" substitutionGroup="un:AbstractSample">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:RandomSampleType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="RandomSampleType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSampleType">
                <xs:sequence>
                    <xs:element ref="un:Realisation" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="SystematicSample" substitutionGroup="un:AbstractSample">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:SystematicSampleType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="SystematicSampleType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSampleType">
                <xs:sequence>
                    <xs:element ref="un:Realisation" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="UnknownSample" substitutionGroup="un:AbstractSample">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:UnknownSampleType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="UnknownSampleType">
        <xs:complexContent>
            <xs:extension base="un:AbstractSampleType">
                <xs:sequence>
                    <xs:element ref="un:Realisation" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Realisation" substitutionGroup="un:AbstractUncertainty">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="un:RealisationType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="RealisationType">
        <xs:complexContent>
            <xs:extension base="un:AbstractUncertaintyType">
                <xs:sequence>
                    <xs:element name="weight" type="un:double"/>
                    <xs:choice maxOccurs="unbounded">
                        <xs:element name="value" type="un:ContinuousValueType"/>
                        <xs:element name="category" type="un:CategoricalValueType"/>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="id" type="xs:ID"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UncertMLType">
        <xs:sequence>
            <xs:element ref="un:AbstractUncertainty"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="UncertML" type="un:UncertMLType"/>
</xs:schema>
